# There are some workarounds used in this spec which are ok for demo purposes,
# but should be changed in real world applications:
# 1. Auth is not used
# 2. Jenkins Image is consumed from cloud
Master:

  # By default ServiceType is LoadBalancer and it won't work in minikube.
  # If we do not have ingress in k8s (minikube does not have it by default),
  # `ServiceType: NodePort` should be used.
  # But if we have enabled ingress, for ex. via addon, then following
  # configuration will work.
  ServiceType: ClusterIP
  HostName: jenkins.192.168.99.100.nip.io
  Ingress:
    Annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"

  # Latest Jenkins enforces high security, so even if we specify user/pass in
  # plaintext, we still won't be able to access API, because we'll need to
  # retreive API token, and this is hard to do programmatically.
  UseSecurity: false

  # We are using upstream jenkins/jenkins:lts image, which is not good for
  # cluster security and reliability, but it's quite ok for Demo.
  Image: "jenkins/jenkins"
  ImageTag: "lts"

  # Defaults from https://github.com/helm/charts/tree/master/stable/jenkins
  # Defaults are fine, but it's  more reliable to have k8s plugin versin
  # which match our cluster.
  InstallPlugins:
  - kubernetes:1.12.0
  - workflow-aggregator:2.5
  - credentials-binding:1.16
  - git:3.9.1
  - workflow-job:2.23
  - jobConfigHistory:2.19

# Create service account and ClusterRoleBinding for Kubernetes plugin
rbac:
  install: true

# We don't need agent to be installed since we are using k8s plugin
Agent:
  Enabled: false
